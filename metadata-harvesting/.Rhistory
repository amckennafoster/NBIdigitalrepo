View(keydf)
View(keydf)
keydf <- metdf %>% unnest(keywords) %>% select(doi, keywords) #This lists the dois and keywords
keywords <- (merge(keycat, keydf, by = 'keywords'))
View(keywords)
#Import a categorized list of keywords:
keycat = read.csv("controlledVocab.csv")
keywords <- (merge(keycat, keydf, by = 'keywords'))
agg = aggregate(keywords,
by = list(keywords$type),
FUN = count)
typeof(keywords)
typeof(keywords$keywords)
keydf <- ldply (keywords, data.frame)
library (plyr)
keydf <- ldply (keywords, data.frame)
typeof(keydf)
View(keydf)
typeof(keywords$count)
str(keywords)
agg = aggregate(keywords,
by = list(keywords$type),
FUN = count)
View(agg)
View(agg)
agg = aggregate(keywords,
by = list(keywords$type),
FUN = sum)
agg = aggregate(keywords,
by = list(keywords$type),
FUN = count)
agg = aggregate(keywords,
by = list(keywords$keywords),
FUN = count)
View(agg)
keydf <- count(keywords, 'doi')
View(keydf)
subset(keywords, keywords$type=='geographies')
subset(keywords, type=='geographies')
subset(keywords, type=='geographies', group=='mammals')
View(agg)
View(keydf)
View(keydf)
View(metdf)
xtype = 'geographies'
xgroup = 'mammals'
keywords[with(keywords, xtype %in% keywords & ytype %in% keywords),]
ytype = 'mammals'
keywords[with(keywords, xtype %in% keywords & ytype %in% keywords),]
xtype = 'nantucket'
keywords[with(keywords, xtype %in% keywords & ytype %in% keywords),]
test <- keywords[with(keywords, xtype %in% keywords & ytype %in% keywords),]
test <- keywords[with(keywords, keywords %in% xtypes & keywords %in% ytype),]
test <- keywords[with(keywords, keywords %in% xtype & keywords %in% ytype),]
View(test)
test <- keywords[with(keywords, keywords %in% xtype OR keywords %in% ytype),]
test <- filter(keywords,
keywords == 'nantucket' |
keywords == 'mammals')
test <- filter(keywords,
keywords == 'mammals')
chart1 <- (merge(test, keywords, by = 'doi'))
View(agg)
View(chart1)
View(chart1)
View(test)
View(test)
filter1 <- filter(keywords,
keywords == 'mammals') %>% subset(select = -c(keywords,type) )
View(filter1)
dfchart1 <- (merge(filter1, keywords, by = 'doi'))
View(dfchart1)
filter2 <- filter(dfchart1,
type == 'geographies')
View(filter2)
rows1 <- nrows(filter1)
rows1 <- nrow(filter1)
filter2 %>%
group_by(keywords) %>%
tally()
chart1 <- filter2 %>%
group_by(keywords) %>%
tally()
barplot(chart1)
View(chart1)
typeof(chart1$n)
barplot(chart1$n)
chart1 <- chart1[order(n),]
chart1 <- chart1[order(chart1$n),]
barplot(chart1$n)
chart1 <- chart1[order(-chart1$n),]
barplot(chart1$n)
filter1a <- filter(keywords,
keywords == 'nantucket') %>% subset(select = -c(keywords,type) )
#Number of dois with the filter1 term
rows1a <- nrow(filter1)
#Join with keywords to get all the keywords for the dois that match filter1
dfchart1a <- (merge(filter1, keywords, by = 'doi'))
#Number of dois with the filter1 term
rows1a <- nrow(filter1a)
filter2a <- filter(dfchart1a,
type == 'group')
#Count occurances
chart1a <- filter2a %>%
group_by(keywords) %>%
tally()
#Sort descending
chart1a <- chart1a[order(-chart1a$n),]
#Chart it
barplot(chart1a$n)
View(filter2a)
#Join with keywords to get all the keywords for the dois that match filter1
dfchart1a <- (merge(filter1a, keywords, by = 'doi'))
filter2a <- filter(dfchart1a,
type == 'group')
#Count occurances
chart1a <- filter2a %>%
group_by(keywords) %>%
tally()
#Sort descending
chart1a <- chart1a[order(-chart1a$n),]
#Chart it
barplot(chart1a$n)
library("jsonlite")
library("httr")
library(tidyr)
library(tidyverse)
library (plyr)
library(ggplot2)
library(gghighlight)
#OPEN EXISTING FILE if running a new download! Open a previous json file
df <- fromJSON("nbiRepository-2020-09-11.json")
metdf <- df$metadata
#Import a categorized list of keywords:
keycat = read.csv("controlledVocab.csv")
keywords <- (merge(keycat, keydf, by = 'keywords'))
keywords <- (merge(keycat, keydf, by = 'keywords'))
keydf <- metdf %>% unnest(keywords) %>% select(doi, keywords) #This lists the dois and number of keywords
keywords <- (merge(keycat, keydf, by = 'keywords'))
filter1 <- filter(keywords,
keywords == 'mammals') %>% subset(select = -c(keywords,type) )
#Number of dois with the filter1 term
rows1 <- nrow(filter1)
#Join with keywords to get all the keywords for the dois that match filter1
dfchart1 <- (merge(filter1, keywords, by = 'doi'))
filter2 <- filter(dfchart1,
type == 'geographies')
#Count occurances
chart1 <- filter2 %>%
group_by(keywords) %>%
tally()
#Sort descending
chart1 <- chart1[order(-chart1$n),]
#Chart it
barplot(chart1$n)
ggplot(chart1, aes(x=n, fill=n )) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(x=n) +
ggplot(chart1, aes(x=n) +
ggplot(chart1, aes(x=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(x=n), fill=n) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(x=n, fill=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
View(chart1)
ggplot(chart1, aes(x=keywords, fill=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(y=keywords, fill=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(y=n, fill=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
View(filter2)
ggplot(filter2, aes(x=keywords, fill=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1$n) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(x=keywords, y=n)) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(chart1, aes(x=keywords, y=n)) +
geom_bar( stat='identiy')
ggplot(chart1, aes(x=keywords, y=n)) +
geom_bar( stat='identity')
ggplot(filter2, aes(x=keywords)) +
geom_bar() +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="bin", aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="bin", aes(y = ..count..-0.5, label=..count..)) +
#  geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count..)) +
#  geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., color="white")) +
#  geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., color="yellow")) +
#  geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., color="yellow", size=3.5)) +
#  geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal()
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., color="yellow", size=3.5)) +
#  geom_text(aes(label = ..count.., vjust=1.6, color="white", size=3.5)) +
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(vjust= 1.5, label=..count.., color="yellow", size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y=1, label=..count.., color="yellow", size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = 1, label=..count.., color="yellow", size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., color="yellow", size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="steelblue") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="none") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords, color='black')) +
geom_bar(fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords, color='red')) +
geom_bar(fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords, color=keywords)) +
geom_bar(fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(color=black, fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=reorder(day, -keywords))) +
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=reorder(keywords, ..count..))) +
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(x=keywords)) +
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(fct_infreq(keywords))) +
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none") +
ggtitle("Research Outputs on (fill in)") +
xlab("Geography") + ylab("Count of Uploads")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none") +
labs(title = "Research Outputs on (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="white") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5)) +
labs(title = "Research Outputs on (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5)) +
labs(title = "Research Outputs on (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
filter1a <- filter(keywords,
keywords == 'nantucket') %>% subset(select = -c(keywords,type) )
#Number of dois with the filter1 term
rows1a <- nrow(filter1a)
#Join with keywords to get all the keywords for the dois that match filter1
dfchart1a <- (merge(filter1a, keywords, by = 'doi'))
filter2a <- filter(dfchart1a,
type == 'group')
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=0)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title = "Research Outputs on (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#d0edf2") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#d0edf2") +
geom_text(stat="count", aes(y = ..count..-0.7, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#d0edf2") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
write.csv(filter2, "byGroup.csv")
library(shiny)
library(htmlwidgets)
library(ggplot2)
library(gghighlight)
library(ggvis)
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
write.csv(keywords, "keywords.csv")
runApp("shiny-app")
library(dplyr)
test <- filter(merge((filter(keywords, keywords == 'mammals') %>% subset(select = -c(keywords,type) )), keywords, by = 'doi'), type == 'geographies')
View(test)
runApp("shiny-app")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1, size=10)) +
labs(title = "Research Outputs on (fill in)", x="Geography", y= "Count of Uploads")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1, size=10, face='bold')) +
labs(title = "Research Outputs on (fill in)", x="Geography", y= "Count of Uploads")
runApp("shiny-app")
runApp("shiny-app")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5),
plot.x = element_text(face='bold', size=12),
plot.y = element_text(face='bold', size=12),
axis.text.x = element_text(angle = 45, hjust=1, size=10, face='bold')) +
ggtitle(paste("Research Outputs on (fill in)"))+ #)) +
labs(x="Geography", y= "Count of Uploads")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5),
axis.title.x = element_text(face='bold', size=12),
axis.title.y = element_text(face='bold', size=12),
axis.text.x = element_text(angle = 45, hjust=1, size=10, face='bold')) +
ggtitle(paste("Research Outputs on (fill in)"))+ #)) +
labs(x="Geography", y= "Count of Uploads")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
filter1a <- filter(keywords,
keywords == 'nantucket') %>% subset(select = -c(keywords,type) )
#Number of dois with the filter1 term
rows1a <- nrow(filter1a)
#Join with keywords to get all the keywords for the dois that match filter1
dfchart1a <- (merge(filter1a, keywords, by = 'doi'))
filter2a <- filter(dfchart1a,
type == 'group')
ggplot(filter2a, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#d0edf2") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5), axis.text.x = element_text(angle = 45, hjust=1)) +
labs(title = "Research Outputs encompassing (fill in)", x="Geography", y= "Count of Uploads")
runApp("shiny-app")
runApp("shiny-app")
ggplot(filter2, aes(fct_infreq(keywords))) + #this fct_infreq sorts the bars https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph
geom_bar(color='black', fill="#def2da") +
geom_text(stat="count", aes(y = ..count..-0.5, label=..count.., size=3.5)) + #This adds the
theme_minimal() +
theme(legend.position="none", plot.title = element_text(face='bold', size=14, hjust=0.5),
axis.title.x = element_text(face='bold', size=12),
axis.title.y = element_text(face='bold', size=12),
axis.text.x = element_text(angle = 45, hjust=1, size=14, face='bold')) +
ggtitle(paste("Research Outputs on (fill in)"))+ #)) +
labs(x="Geography", y= "Count of Uploads")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
