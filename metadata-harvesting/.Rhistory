braycurtis
#Put it in a matrix
braycurtismatrix<-as.matrix (braycurtis)
braycurtismatrix
write.table(braycurtismatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/bray.txt", sep="\t")
#Try removing Novel
catother<-data.frame(catrel)
attach(catother)
catother = catother[-1,]
View(catother)
View(cat)
View(catother)
#Transposed the table
catother<-t(catother)
#Calculate dissimilarity
braycurtisother = vegdist(catother, "bray")
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
#Calculate dissimilarity
braycurtisother = vegdist(catother, "bray")
View(catother)
View(cat)
catother <- subset(catother, select = -c(category))
#Transposed the table
catother<-t(catother)
View(catother)
#Try removing Novel
catother<-data.frame(catrel)
attach(catother)
View(cat)
View(catother)
View(catother)
catother = catother[-16,]
View(catother)
catother <- subset(catother, select = -c(category))
View(catother)
#Transposed the table
catother<-t(catother)
#Calculate dissimilarity
braycurtisother = vegdist(catother, "bray")
braycurtisother
#Put it in a matrix
braycurtisothermatrix<-as.matrix (braycurtisother)
braycurtismatrixother
write.table(braycurtismatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/bray.txt", sep="\t")
braycurtisothermatrix
write.table(braycurtisothermatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/bray.txt", sep="\t")
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
citation
citation("vegan")
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv", header=FALSE)
View(lflcat)
ord <- decorana(lflcat)
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv")
View(lflcat)
ord <- decorana(lflcat)
lflcat <- subset(lflcat, select = -c(categories))
ord <- decorana(lflcat)
View(lflcat)
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv")
View(lflcat)
lflcat <- subset(lflcat, select = -c(categories))
ord <- decorana(lflcat)
ord
summar(ord)
summary(ord)
plot(ord)
dune
data(dune)
ord <- decorana(dune)
ord
summary(ord)
plot(ord)
ord <- cca(lflcat)
plot(ord)
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv", row.names=1)
View(lflcat)
ord <- cca(lflcat)
plot(ord)
ord <- decorana(lflcat)
ord
plot(ord)
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv", row.names=1)
View(lflcat)
#detrended correspondence analysis:
ord <- decorana(lflcat)
ord
plot(ord)
#draw a nice graph:
plot(ord, type = "n")
points(ord, display = "sites", cex = 0.8, pch=21, col="red", bg="yellow")
text(ord, display = "spec", cex=0.7, col="blue")
plot(ord)
points(ord, display = "spec", cex = 0.8, pch=21, col="red", bg="yellow")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
points(ord, display = "spec", cex = 0.8, pch=21, col="red", bg="yellow")
text(ord, display = "spec", cex=0.7, col="blue")
plot(ord)
data(dune)
View(dune)
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
points(ord, display = "site", cex = 0.8, pch=21, col="red", bg="yellow")
text(ord, display = "spec", cex=0.7, col="blue")
text(ord, display = "site", cex = 0.8, pch=21, col="red", bg="yellow")
text(ord, display = "site", cex = 0.8, pch=21, col="black")
text(ord, display = "site", cex = 0.8, col="black")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.8, col="black")
text(ord, display = "spec", cex=0.7, col="blue")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.8, col="black")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "spec", cex=0.7, col="blue")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.8, col="black")
text(ord, display = "spec", cex=0.7, col="blue")
ordihull(ord, Management, col=1:4, lwd=3)
View(dune)
ordihull(ord, site, col=1:4, lwd=3)
attach(dune.env)
plot(ord, disp="sites", type="n")ordihull(ord, Management, col=1:4, lwd=3)> ordiellipse(ord, Management, col=1:4, kind = "ehull", lwd=3)> ordiellipse(ord, Management, col=1:4, draw="polygon")> ordispider(ord, Management, col=1:4, label = TRUE)
data(dune.env)
attach(dune.env)
plot(ord, disp="sites", type="n")
ordihull(ord, Management, col=1:4, lwd=3)
ordiellipse(ord, Management, col=1:4, kind = "ehull", lwd=3)
ordiellipse(ord, Management, col=1:4, draw="polygon")
ordispider(ord, Management, col=1:4, label = TRUE)
points(ord, disp="sites", pch=21, col="red", bg="yellow", cex=1.3)
View(dune.env)
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.8, col="black")
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
#detrended correspondence analysis:
ord <- decorana(lflcat)
ord
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.8, col="black")
text(ord, display = "spec", cex=0.7, col="blue")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 1, col="black")
text(ord, display = "spec", cex=1, col="blue")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
text(ord, display = "spec", cex=1, col="blue")
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv", row.names=1)
View(lflcat)
cat <- read.csv("~/Research/Free_little_lib/DataAnalysis/cat.csv", row.names=1)
View(cat)
catrel <- read.csv("~/Research/Free_little_lib/DataAnalysis/catrel.csv", row.names=1)
View(catrel)
View(catrel)
catrel <- read.csv("~/Research/Free_little_lib/DataAnalysis/catrel.csv", row.names=1)
View(catrel)
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
#Deleting the first column
cat<-data.frame(catrel)
attach(cat)
cat <- subset(cat, select = -c(category))
#Transposed the table
cat<-t(cat)
#Calculate dissimilarity
braycurtis = vegdist(cat, "bray")
braycurtis
#Put it in a matrix
braycurtismatrix<-as.matrix (braycurtis)
braycurtismatrix
write.table(braycurtismatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/bray.txt", sep="\t")
#Try removing Novel
catother<-data.frame(catrel)
attach(catother)
View(cat)
catother = catother[-13,]
View(catother)
catother <- subset(catother, select = -c(category))
View(catother)
#Transposed the table
catother<-t(catother)
#Calculate dissimilarity
braycurtisother = vegdist(catother, "bray")
braycurtisother
#Put it in a matrix
braycurtisothermatrix<-as.matrix (braycurtisother)
braycurtisothermatrix
write.table(braycurtisothermatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/bray.txt", sep="\t")
braycurtismatrix
write.table(braycurtismatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/bray.txt", sep="\t")
write.table(braycurtisothermatrix, "C:/Users/Andre/Documents/Research/Free_little_lib/DataAnalysis/brayother.txt", sep="\t")
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
#detrended correspondence analysis:
ord <- decorana(lflcat)
ord
plot(ord)
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
text(ord, display = "spec", cex=1, col="blue")
#corresondence analysis:
ord <- cca(lflcat)
plot(ord)
View(lflcat)
#Try switching locations to rows, then use another file to categorize by neighborhood
tlflcat <- -t(lflcat)
View(tlflcat)
View(tlflcat)
lflcat <- read.csv("~/Research/Free_little_lib/DataAnalysis/lflcat.csv", row.names=1)
View(lflcat)
#Try switching locations to rows, then use another file to categorize by neighborhood
tlflcat <- -t(lflcat)
neighborhoods <- read.table("~/Research/Free_little_lib/DataAnalysis/neighborhoods.csv", quote="\"", comment.char="")
View(neighborhoods)
#detrended correspondence analysis:
ord <- decorana(lflcat)
ord
plot(ord)
summary(ord)
ord.scores <- ord$cproj[ ,1:2]
ord.scores
# Extract axis 1 & 2 sample scores
tlflscores <- tlflcat$rproj[ ,1:2]
tord <- decorana(tlflcat)
View(tlflcat)
View(lflcat)
View(tlflcat)
View(lflcat)
#detrended correspondence analysis:
ord <- decorana(lflcat)
#Try switching locations to rows, then use another file to categorize by neighborhood
tlflcat <- t(lflcat)
tord <- decorana(tlflcat)
View(cat)
# Extract axis 1 & 2 sample scores
tlflscores <- tord$rproj[ ,1:2]
tlflscores
#Merge neighborhoods and scores
tord.scores <- data.frame(tlfl.dca1=tlflscores[,1],tlfl.dca2=tlflscores[,2], hoods=neighborhoods)
tord.scores
attach(tord.scores)
#plot
plot(tlfl.dca1, tlfl.dca2, type="n", xlab="DCA Axis 1", ylab="DCA Axis 2", main="LFLs, by neighborhood")
points(tlfl.dca1[hoods=="columbia.city"], tlfl.dca2[hoods=="columbia.city"], col="green", pch=16)
points(tlfl.dca1[V1=="columbia.city"], tlfl.dca2[V1=="columbia.city"], col="green", pch=16)
points(tlfl.dca1[V1=="central.district"], tlfl.dca2[V1=="central.district"], col="orange", pch=16)
points(tlfl.dca1[V1=="northgate"], tlfl.dca2[V1=="northgate"], col="yellow", pch=16)
points(tlfl.dca1[V1=="phinney"], tlfl.dca2[V1=="phinney"], col="blue", pch=16)
points(tlfl.dca1[V1=="queen.anne"], tlfl.dca2[V1=="queen.anne"], col="black", pch=16)
points(tlfl.dca1[V1=="laurelhurst.sandpoint"], tlfl.dca2[V1=="laurelhurst.sandpoint"], col="red", pch=16)
points(tlfl.dca1[V1=="northgate"], tlfl.dca2[V1=="northgate"], col="purple", pch=16)
tlflscores.cat <- tord$cproj[ ,1:2]
tlflscores.cat
text(tlflscores.cat$DCA1[], tlflscores.cat$DCA2[], col="blue", pch=16)
text(tlflscores.cat[DCA1, tlflscores.cat[DCA2, col="blue", pch=16)
points(tlflscores.cat[DCA1, tlflscores.cat[DCA2, col="brown", pch=16)
points(tlflscores.cat[DCA1, tlflscores.cat[DCA2], col="brown", pch=16)
points(tlflscores.cat[DCA1], tlflscores.cat[DCA2], col="brown", pch=16)
points(tlflscores.cat, col="brown", pch=16)
points(tlflscores.cat, col="brown", pch=16)
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", select = "northgate1", cex = 0.7, col="black")
text(ord, display = "site", cex = 0.7, col="black")
text(ord, display = "spec", cex=1, col="blue")
text(ord, display = "spec", cex=0.5, col="blue")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
text(ord, display = "spec", cex=0.5, col="blue")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", select [ ,1:4], cex = 0.7, col="black")
text(ord, display = "site", select = [ ,1:4], cex = 0.7, col="black")
text(ord, display = "site", select = 1:4, cex = 0.7, col="black")
text(ord, display = "spec",  select = 1:4, cex=0.5, col="blue")
View(ord)
View(lflcat)
View(tlflcat)
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
text(ord, display = "spec",  select = 1:5, cex=0.5, col="blue")
text(ord, display = "spec",  select = 6:11, cex=0.5, col="black")
text(ord, display = "spec",  select = 12:16, cex=0.5, col="red")
text(ord, display = "spec",  select = 17:21, cex=0.5, col="green")
text(ord, display = "spec",  select = 22:26, cex=0.5, col="purple")
text(ord, display = "spec",  select = 27:32, cex=0.5, col="orange")
#Try switching locations to rows, then use another file to categorize by neighborhood
tlflcat <- t(lflcat)
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.5, col="black")
text(ord, display = "spec",  select = 1:5, cex=0.5, col="blue")
text(ord, display = "spec",  select = 6:11, cex=0.5, col="brown")
text(ord, display = "spec",  select = 12:16, cex=0.5, col="red")
text(ord, display = "spec",  select = 17:21, cex=0.5, col="green")
text(ord, display = "spec",  select = 22:26, cex=0.5, col="purple")
text(ord, display = "spec",  select = 27:32, cex=0.5, col="orange")
#draw a nice graph:
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.6, col="black")
text(ord, display = "spec",  select = 1:5, cex=0.6, col="blue")
text(ord, display = "spec",  select = 6:11, cex=0.6, col="brown")
text(ord, display = "spec",  select = 12:16, cex=0.6, col="red")
text(ord, display = "spec",  select = 17:21, cex=0.6, col="green")
text(ord, display = "spec",  select = 22:26, cex=0.6, col="purple")
text(ord, display = "spec",  select = 27:32, cex=0.6, col="orange")
#draw a nice graph: A good size for export is 1000 x1000
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.6, col="black")
#load vegan
library("vegan", lib.loc="~/R/win-library/3.5")
#draw a nice graph: A good size for export is 1000 x1000
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.6, col="black")
text(ord, display = "spec",  select = 1:5, cex=0.9, col="blue")
text(ord, display = "spec",  select = 6:11, cex=0.9, col="brown")
text(ord, display = "spec",  select = 12:16, cex=0.6, col="red")
#draw a nice graph WITH POINTS FOR lflS
plot(ord, type = "n") #draws blank plot
text(ord, display = "site", cex = 0.6, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
#draw a nice graph WITH POINTS FOR lflS
plot(ord, type = "n", scaling = 3.7) #draws blank plot
#draw a nice graph WITH POINTS FOR lflS
scl <- 3
warnings()
#draw a nice graph WITH POINTS FOR lflS
scl <- 3
plot(ord, type = "n", scaling = scl) #draws blank plot
#draw a nice graph: A good size for export is 1000 x1000
plot(ord, type = "n", xlim(-3.7,3.7)) #draws blank plot
#draw a nice graph: A good size for export is 1000 x1000
plot(ord, type = "n", xlim(-3.7,3.7), ylim(-3,3)) #draws blank plot
#draw a nice graph: A good size for export is 1000 x1000
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-3,3)) #draws blank plot
#draw a nice graph: A good size for export is 1000 x1000
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
text(ord, display = "site", cex = 0.6, col="black")
text(ord, display = "spec",  select = 1:5, cex=0.9, col="blue")
text(ord, display = "spec",  select = 6:11, cex=0.9, col="brown")
text(ord, display = "spec",  select = 12:16, cex=0.9, col="red")
text(ord, display = "spec",  select = 17:21, cex=0.9, col="green")
text(ord, display = "spec",  select = 22:26, cex=0.9, col="purple")
text(ord, display = "spec",  select = 27:32, cex=0.9, col="orange")
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
text(ord, display = "site", cex = 0.6, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
View(neighborhoods)
hood <- [columbia.city, cetral.district, northgate, phinney, queen.anne, laurelhurst.sandpoint]
hood <- c[columbia.city, cetral.district, northgate, phinney, queen.anne, laurelhurst.sandpoint]
hood <- c(columbia.city, cetral.district, northgate, phinney, queen.anne, laurelhurst.sandpoint)
hood <- c("columbia.city", "cetral.district", "northgate", "phinney", "queen.anne", "laurelhurst.sandpoint")
legend(ord, hood)
legend("topright",
legend = hood)
colvec <- c("blue", "brown", "red", "green", "purple", "orange")
legend("topright",
legend = hood, col = colvec)
legend("bottomright",
legend = hood, col = colvec)
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec))
#draw a nice graph WITH POINTS FOR lflS
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec)
text(ord, display = "site", cex = 0.6, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
text(ord, display = "site", cex = 0.9, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec)
#draw a nice graph WITH POINTS FOR lflS
#This sets up values for the legend
hood <- c("columbia.city", "Central District", "Northgate", "Phinney", "Queen Anne", "Laurelhurst/Sand Point")
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec)
hood <- c("Columbia City", "Central District", "Northgate", "Phinney", "Queen Anne", "Laurelhurst/Sand Point")
colvec <- c("blue", "brown", "red", "green", "purple", "orange")
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.5,1.5)) #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec)
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-1.7,1.7)) #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec)
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-2,2)) #draws blank plot
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
text(ord, display = "site", cex = 0.7, col="black")
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-4,4)) #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
#This draws the plot
plot(ord, type = "n", xlim = c(-3.7,3.7), ylim = c(-2.1,2.1)) #draws blank plot
text(ord, display = "site", cex = 0.7, col="black")
points(ord, display = "spec",  select = 1:5, col="blue", pch=16)
points(ord, display = "spec",  select = 6:11, col="brown", pch=16)
points(ord, display = "spec",  select = 12:16, col="red", pch=16)
points(ord, display = "spec",  select = 17:21, col="green", pch=16)
points(ord, display = "spec",  select = 22:26, col="purple", pch=16)
points(ord, display = "spec",  select = 27:32, col="orange", pch=16)
legend("bottomright",
legend = hood, col = colvec, pch = 21, pt.bg = colvec)
detach(tord.scores)
install.packages("rmarkdown")
install.packages(c("htmlwidgets", "leaflet", "mapview", "raster", "sf", "tidycensus", "tidyverse"))
install.packages("bookdown")
library("jsonlite")
library("httr")
library(tidyr)
library(tidyverse)
library (plyr)
library(ggplot2)
library(gghighlight)
setwd("C:/Users/Andre/Documents/GitHub/NBIdigitalrepo/metadata-harvesting")
#This gets up to 100 records
res = GET('https://zenodo.org/api/records/?communities=nantucketbiodiversity&size=100&page=1')
jsonToSave <- rawToChar(res$content)
# save JSON file
date <- Sys.Date() #Get today's date to write into the file
write(jsonToSave, paste0("nbiRepository-",date,".json"))
#Convert to an accessible form.
df = fromJSON(rawToChar(res$content))
metdf <- df$metadata
keydf <- metdf %>% unnest(keywords) %>% select(doi, keywords) #This lists the dois and number of keywords
#Import a categorized list of keywords:
keycat = read.csv("controlledVocab.csv")
keywords <- (merge(keycat, keydf, by = 'keywords'))
write.csv(keywords, "keywords.csv")
library(shiny)
library(htmlwidgets)
library(tidyverse)
library (plyr)
library(ggplot2)
library(ggvis)
library(dplyr)
write.csv(keywords, "shiny-app/keywords.csv") #save a copy for shiny-app
runApp("shiny-app")
runApp("shiny-app")
runApp("shiny-app")
library(rsconnect)
rsconnect::deployApp('C:/Users/Andre/Documents/GitHub/NBIdigitalrepo/metadata-harvesting/shiny-app')
